// Static data for the design system components and categories
import { Category, Component, DesignToken } from '@/types/design-system';

// Mock data for categories
const mockCategories: Category[] = [
  {
    id: '1',
    name: 'Foundation',
    description: 'Design tokens, colors, typography, spacing',
    slug: 'foundations',
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '2',
    name: 'Core UI',
    description: 'Essential user interface components',
    slug: 'core-ui',
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '3',
    name: 'Forms & Input',
    description: 'Form controls and input components',
    slug: 'forms',
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '4',
    name: 'Navigation',
    description: 'Navigation and menu components',
    slug: 'navigation',
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '5',
    name: 'Layout & Structure',
    description: 'Layout and structural components',
    slug: 'content-layout',
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '6',
    name: 'Data Display',
    description: 'Charts, tables, and data visualization',
    slug: 'data-display',
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '7',
    name: 'Feedback',
    description: 'Alerts, modals, notifications, and feedback',
    slug: 'feedback',
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  {
    id: '8',
    name: 'Experimental',
    description: 'Cutting-edge experimental components',
    slug: 'experimental',
    sort_order: 8,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }
];

// Mock data for components
const mockComponents: Component[] = [
  // Foundation (Category 1)
  {
    id: 'f1',
    name: 'Color Palette',
    description: 'Design system color palette and color tokens',
    slug: 'color-palette',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f2',
    name: 'Typography Scale',
    description: 'Font sizes, weights, and typography tokens',
    slug: 'typography-scale',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f3',
    name: 'Spacing System',
    description: 'Spacing scale and layout tokens',
    slug: 'spacing-system',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f4',
    name: 'Elevation & Shadows',
    description: 'Shadow and elevation design tokens',
    slug: 'elevation-shadows',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f5',
    name: 'Icon System',
    description: 'Icon library and usage guidelines',
    slug: 'icon-system',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f6',
    name: 'Enhanced Icon System',
    description: 'Advanced icon system with categorization',
    slug: 'enhanced-icon-system',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'f7',
    name: 'Interaction States',
    description: 'Interactive states and micro-animations',
    slug: 'interaction-states',
    category_id: '1',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Core UI (Category 2)
  {
    id: 'c1',
    name: 'Button',
    description: 'Interactive button component with variants',
    slug: 'button',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c2',
    name: 'Badge',
    description: 'Small status and labeling component',
    slug: 'badge',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c3',
    name: 'Card',
    description: 'Flexible content container component',
    slug: 'card',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c4',
    name: 'Avatar',
    description: 'User profile picture component',
    slug: 'avatar',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c5',
    name: 'Skeleton',
    description: 'Loading placeholder component',
    slug: 'skeleton',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c6',
    name: 'Loading Spinner',
    description: 'Animated loading indicator',
    slug: 'loading-spinner',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c7',
    name: 'Loading',
    description: 'General loading states and indicators',
    slug: 'loading',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c8',
    name: 'Separator',
    description: 'Visual divider component',
    slug: 'separator',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 8,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c9',
    name: 'Divider',
    description: 'Content separation component',
    slug: 'divider',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 9,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c10',
    name: 'Toggle',
    description: 'Binary state toggle component',
    slug: 'toggle',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 10,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c11',
    name: 'Toggle Group',
    description: 'Multiple choice toggle component',
    slug: 'toggle-group',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 11,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c12',
    name: 'Switch Toggle',
    description: 'Switch-style toggle component',
    slug: 'switch-toggle',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 12,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c13',
    name: 'Slider',
    description: 'Range input slider component',
    slug: 'slider',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 13,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c14',
    name: 'Progress Bar',
    description: 'Progress indication component',
    slug: 'progress-bar',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 14,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c15',
    name: 'Tooltip',
    description: 'Contextual information overlay',
    slug: 'tooltip',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 15,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c16',
    name: 'Popover',
    description: 'Floating content overlay',
    slug: 'popover',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 16,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c17',
    name: 'Hover Card',
    description: 'Hover-triggered content card',
    slug: 'hover-card',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 17,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c18',
    name: 'Collapsible',
    description: 'Expandable content section',
    slug: 'collapsible',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 18,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c19',
    name: 'Accordion',
    description: 'Multi-section collapsible component',
    slug: 'accordion',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 19,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c20',
    name: 'Tabs',
    description: 'Tabbed content navigation',
    slug: 'tabs',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 20,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c21',
    name: 'Rating',
    description: 'Star rating component',
    slug: 'rating',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 21,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c22',
    name: 'Calendar',
    description: 'Date selection calendar',
    slug: 'calendar',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 22,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c23',
    name: 'Date Picker',
    description: 'Date input with calendar popup',
    slug: 'date-picker',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 23,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c24',
    name: 'Code Block',
    description: 'Syntax-highlighted code display',
    slug: 'code-block',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 24,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c25',
    name: 'Resizable',
    description: 'Resizable panels and containers',
    slug: 'resizable',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 25,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c26',
    name: 'Scroll Area',
    description: 'Custom scrollable area',
    slug: 'scroll-area',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 26,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'c27',
    name: 'Aspect Ratio',
    description: 'Maintain consistent aspect ratios',
    slug: 'aspect-ratio',
    category_id: '2',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 27,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Forms & Input (Category 3)
  {
    id: 'i1',
    name: 'Input',
    description: 'Text input field component',
    slug: 'input',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i2',
    name: 'Textarea',
    description: 'Multi-line text input',
    slug: 'textarea',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i3',
    name: 'Label',
    description: 'Form input labels',
    slug: 'label',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i4',
    name: 'Select',
    description: 'Dropdown selection component',
    slug: 'select',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i5',
    name: 'Select Dropdown',
    description: 'Enhanced dropdown select',
    slug: 'select-dropdown',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i6',
    name: 'Advanced Select',
    description: 'Feature-rich select component',
    slug: 'advanced-select',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i7',
    name: 'Multi Select',
    description: 'Multiple selection component',
    slug: 'multi-select',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i8',
    name: 'Checkbox',
    description: 'Checkbox input component',
    slug: 'checkbox',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 8,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i9',
    name: 'Radio Button',
    description: 'Single choice radio input',
    slug: 'radio-button',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 9,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i10',
    name: 'Radio Group',
    description: 'Grouped radio button options',
    slug: 'radio-group',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 10,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i11',
    name: 'Form',
    description: 'Complete form component',
    slug: 'form',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 11,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i12',
    name: 'Form Field',
    description: 'Individual form field wrapper',
    slug: 'form-field',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 12,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i13',
    name: 'Form Validation',
    description: 'Form validation patterns',
    slug: 'form-validation',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 13,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i14',
    name: 'Search Bar',
    description: 'Search input component',
    slug: 'search-bar',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 14,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i15',
    name: 'Color Picker',
    description: 'Color selection input',
    slug: 'color-picker',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 15,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i16',
    name: 'File Upload',
    description: 'File upload input',
    slug: 'file-upload',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 16,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i17',
    name: 'Input OTP',
    description: 'One-time password input',
    slug: 'input-otp',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 17,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i18',
    name: 'Phone Input',
    description: 'International phone number input',
    slug: 'phone-input',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 18,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'i19',
    name: 'Rich Text Editor',
    description: 'WYSIWYG text editor',
    slug: 'rich-text-editor',
    category_id: '3',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 19,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Navigation (Category 4)
  {
    id: 'n1',
    name: 'Navigation',
    description: 'Main navigation component',
    slug: 'navigation',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n2',
    name: 'Navigation Menu',
    description: 'Dropdown navigation menu',
    slug: 'navigation-menu',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n3',
    name: 'Breadcrumb',
    description: 'Navigation breadcrumb trail',
    slug: 'breadcrumb',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n4',
    name: 'Sidebar',
    description: 'Collapsible sidebar navigation',
    slug: 'sidebar',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n5',
    name: 'Menubar',
    description: 'Desktop-style menu bar',
    slug: 'menubar',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n6',
    name: 'Dropdown Menu',
    description: 'Context dropdown menu',
    slug: 'dropdown-menu',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n7',
    name: 'Context Menu',
    description: 'Right-click context menu',
    slug: 'context-menu',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n8',
    name: 'Command Menu',
    description: 'Keyboard-driven command palette',
    slug: 'command-menu',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 8,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n9',
    name: 'Pagination',
    description: 'Page navigation component',
    slug: 'pagination',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 9,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'n10',
    name: 'Steps Stepper',
    description: 'Multi-step process navigation',
    slug: 'steps-stepper',
    category_id: '4',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 10,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Layout & Structure (Category 5)
  {
    id: 'l1',
    name: 'Container',
    description: 'Layout container component',
    slug: 'container',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l2',
    name: 'Grid System',
    description: 'Responsive grid layout',
    slug: 'grid-system',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l3',
    name: 'List',
    description: 'Styled list component',
    slug: 'list',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l4',
    name: 'Banner',
    description: 'Promotional banner component',
    slug: 'banner',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l5',
    name: 'Callout',
    description: 'Highlighted content callout',
    slug: 'callout',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l6',
    name: 'Empty State',
    description: 'Empty data state component',
    slug: 'empty-state',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'l7',
    name: 'Timeline',
    description: 'Chronological timeline component',
    slug: 'timeline',
    category_id: '5',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Data Display (Category 6)
  {
    id: 'd1',
    name: 'Table',
    description: 'Data table component',
    slug: 'table',
    category_id: '6',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'd2',
    name: 'Data Table',
    description: 'Advanced data table with features',
    slug: 'data-table',
    category_id: '6',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'd3',
    name: 'Chart',
    description: 'Data visualization charts',
    slug: 'chart',
    category_id: '6',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'd4',
    name: 'Data Visualization',
    description: 'Complex data visualization',
    slug: 'data-visualization',
    category_id: '6',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Feedback (Category 7)
  {
    id: 'fb1',
    name: 'Alert',
    description: 'Alert notification component',
    slug: 'alert',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb2',
    name: 'Toast',
    description: 'Toast notification component',
    slug: 'toast',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb3',
    name: 'Sonner',
    description: 'Modern toast notifications',
    slug: 'sonner',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb4',
    name: 'Notification',
    description: 'System notification component',
    slug: 'notification',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb5',
    name: 'Dialog',
    description: 'Modal dialog component',
    slug: 'dialog',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb6',
    name: 'Modal',
    description: 'Modal overlay component',
    slug: 'modal',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb7',
    name: 'Confirmation Dialog',
    description: 'Confirmation dialog component',
    slug: 'confirmation-dialog',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb8',
    name: 'Drawer',
    description: 'Slide-out drawer component',
    slug: 'drawer',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 8,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb9',
    name: 'Sheet',
    description: 'Side sheet component',
    slug: 'sheet',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 9,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb10',
    name: 'Feedback',
    description: 'User feedback collection',
    slug: 'feedback',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 10,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'fb11',
    name: 'Error Boundary',
    description: 'Error handling boundary',
    slug: 'error-boundary',
    category_id: '7',
    status: 'stable' as any,
    is_experimental: false,
    sort_order: 11,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },

  // Experimental (Category 8)
  {
    id: 'e1',
    name: 'AI Command Palette',
    description: 'AI-powered command interface',
    slug: 'ai-command-palette',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'e2',
    name: 'CV Inspired',
    description: 'Resume-style layout components',
    slug: 'cv-inspired',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 2,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'e3',
    name: 'Component Analytics',
    description: 'Component usage analytics',
    slug: 'component-analytics',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'e4',
    name: 'Component Usage Guidelines',
    description: 'Interactive usage guidelines',
    slug: 'component-usage-guidelines',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 4,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'e5',
    name: 'Figma Export',
    description: 'Export components to Figma',
    slug: 'figma-export',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 5,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  },
  {
    id: 'e6',
    name: 'Figma Integration',
    description: 'Figma design system integration',
    slug: 'figma-integration',
    category_id: '8',
    status: 'review' as any,
    is_experimental: true,
    sort_order: 6,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    figma_url: null,
    storybook_url: null,
    variants: [],
    documentation: []
  }
];

// Mock data for design tokens
const mockDesignTokens: DesignToken[] = [
  {
    id: '1',
    name: 'Primary Color',
    description: 'Main brand color',
    token_type: 'color' as any,
    value: { hex: '#3b82f6' },
    category_id: null,
    sort_order: 1,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }
];

export const useCategories = () => {
  return {
    data: mockCategories,
    isLoading: false,
    error: null
  };
};

export const useComponents = (categorySlug?: string) => {
  let filteredComponents = mockComponents;
  
  if (categorySlug) {
    const category = mockCategories.find(cat => cat.slug === categorySlug);
    if (category) {
      filteredComponents = mockComponents.filter(comp => comp.category_id === category.id);
    }
  }
  
  return {
    data: filteredComponents,
    isLoading: false,
    error: null
  };
};

export const useDesignTokens = (tokenType?: 'color' | 'typography' | 'spacing' | 'shadow' | 'radius' | 'motion') => {
  let filteredTokens = mockDesignTokens;
  
  if (tokenType) {
    filteredTokens = mockDesignTokens.filter(token => token.token_type === tokenType);
  }
  
  return {
    data: filteredTokens,
    isLoading: false,
    error: null
  };
};

export const useComponent = (slug: string) => {
  const component = mockComponents.find(comp => comp.slug === slug);
  
  return {
    data: component,
    isLoading: false,
    error: component ? null : new Error('Component not found')
  };
};

// Re-export the main useDesignSystem hook from the local file
export { useLocalDesignSystem as useDesignSystem } from './useLocalDesignSystem';
